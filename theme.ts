import { MD3DarkTheme as DefaultDarkTheme,
  MD3LightTheme as DefaultLightTheme,
  type MD3Theme } from 'react-native-paper';

export const lightTheme = {
  ...DefaultLightTheme,
  'colors': {
    'primary': 'rgb(0, 98, 161)',
    'onPrimary': 'rgb(255, 255, 255)',
    'primaryContainer': 'rgb(208, 228, 255)',
    'onPrimaryContainer': 'rgb(0, 29, 53)',
    'secondary': 'rgb(82, 95, 112)',
    'onSecondary': 'rgb(255, 255, 255)',
    'secondaryContainer': 'rgb(214, 228, 247)',
    'onSecondaryContainer': 'rgb(15, 29, 42)',
    'tertiary': 'rgb(0, 110, 34)',
    'onTertiary': 'rgb(255, 255, 255)',
    'tertiaryContainer': 'rgb(114, 254, 127)',
    'onTertiaryContainer': 'rgb(0, 33, 5)',
    'error': 'rgb(172, 50, 49)',
    'onError': 'rgb(255, 255, 255)',
    'errorContainer': 'rgb(255, 218, 215)',
    'onErrorContainer': 'rgb(65, 0, 4)',
    'background': 'rgb(253, 252, 255)',
    'onBackground': 'rgb(26, 28, 30)',
    'surface': 'rgb(253, 252, 255)',
    'onSurface': 'rgb(26, 28, 30)',
    'surfaceVariant': 'rgb(223, 227, 235)',
    'onSurfaceVariant': 'rgb(66, 71, 78)',
    'outline': 'rgb(115, 119, 127)',
    'outlineVariant': 'rgb(194, 199, 207)',
    'shadow': 'rgb(0, 0, 0)',
    'scrim': 'rgb(0, 0, 0)',
    'inverseSurface': 'rgb(47, 48, 51)',
    'inverseOnSurface': 'rgb(241, 240, 244)',
    'inversePrimary': 'rgb(156, 202, 255)',
    'elevation': {
      'level0': 'transparent',
      'level1': 'rgb(240, 244, 250)',
      'level2': 'rgb(233, 240, 248)',
      'level3': 'rgb(225, 235, 245)',
      'level4': 'rgb(223, 234, 244)',
      'level5': 'rgb(218, 230, 242)',
    },
    'surfaceDisabled': 'rgba(26, 28, 30, 0.12)',
    'onSurfaceDisabled': 'rgba(26, 28, 30, 0.38)',
    'backdrop': 'rgba(44, 49, 55, 0.4)',
  },
} satisfies MD3Theme;

export const darkTheme = {
  ...DefaultDarkTheme,
  'colors': {
    'primary': 'rgb(156, 202, 255)',
    'onPrimary': 'rgb(0, 50, 86)',
    'primaryContainer': 'rgb(0, 73, 123)',
    'onPrimaryContainer': 'rgb(208, 228, 255)',
    'secondary': 'rgb(186, 200, 219)',
    'onSecondary': 'rgb(36, 49, 64)',
    'secondaryContainer': 'rgb(59, 72, 87)',
    'onSecondaryContainer': 'rgb(214, 228, 247)',
    'tertiary': 'rgb(84, 225, 102)',
    'onTertiary': 'rgb(0, 57, 13)',
    'tertiaryContainer': 'rgb(0, 83, 23)',
    'onTertiaryContainer': 'rgb(114, 254, 127)',
    'error': 'rgb(255, 179, 174)',
    'onError': 'rgb(104, 0, 11)',
    'errorContainer': 'rgb(139, 25, 29)',
    'onErrorContainer': 'rgb(255, 218, 215)',
    'background': 'rgb(26, 28, 30)',
    'onBackground': 'rgb(226, 226, 230)',
    'surface': 'rgb(26, 28, 30)',
    'onSurface': 'rgb(226, 226, 230)',
    'surfaceVariant': 'rgb(66, 71, 78)',
    'onSurfaceVariant': 'rgb(194, 199, 207)',
    'outline': 'rgb(140, 145, 153)',
    'outlineVariant': 'rgb(66, 71, 78)',
    'shadow': 'rgb(0, 0, 0)',
    'scrim': 'rgb(0, 0, 0)',
    'inverseSurface': 'rgb(226, 226, 230)',
    'inverseOnSurface': 'rgb(47, 48, 51)',
    'inversePrimary': 'rgb(0, 98, 161)',
    'elevation': {
      'level0': 'transparent',
      'level1': 'rgb(33, 37, 41)',
      'level2': 'rgb(36, 42, 48)',
      'level3': 'rgb(40, 47, 55)',
      'level4': 'rgb(42, 49, 57)',
      'level5': 'rgb(44, 52, 62)',
    },
    'surfaceDisabled': 'rgba(226, 226, 230, 0.12)',
    'onSurfaceDisabled': 'rgba(226, 226, 230, 0.38)',
    'backdrop': 'rgba(44, 49, 55, 0.4)',
  },
} satisfies MD3Theme;